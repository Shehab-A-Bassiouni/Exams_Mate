// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Examination_System.StoredProcModel;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Examination_System.StoredProcModel
{
    public partial interface IITI_Exam_SystemContextProcedures
    {
        Task<List<CorrectExamPerStdIdResult>> CorrectExamPerStdIdAsync(int? StdId, int? ExamNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> deleteAnswersAsync(int? ansID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteCourseAsync(int? crsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteDepartmentAsync(int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteDepartmentCourseAsync(int? crsID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteExamAsync(int? examNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteExamQuestionsAsync(int? examNo, int? QID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteInstructorAsync(int? insID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteInstructorCourseAsync(int? crsid, int? insid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteQuestionBankAsync(int? QID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStudentAsync(int? stdID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteStudentAnswersResult>> DeleteStudentAnswersAsync(int? ExamQuesID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStudentCourseAsync(int? CRSID, int? STDID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStudentExamAnswersAsync(int? stdID, int? ExamID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteUserAsync(int? userID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ExamAnswersAsync(int? ExamID, string Stdid, string Ans1, string Ans2, string Ans3, string Ans4, string Ans5, string Ans6, string Ans7, string Ans8, string Ans9, string Ans10, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GenerateExamResult>> GenerateExamAsync(int? ExamNumber, string Duration, DateTime? GenerationDate, string State, int? PassingGrade, int? InstID, int? CrsID, int? McqNUM, int? TfNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<generateExamAnswersResult>> generateExamAnswersAsync(int? ExamNo, bool? CorrectAns, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getCoursTopicsByCrsIdResult>> getCoursTopicsByCrsIdAsync(int? CrsId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getCrsNameAndStdNumByInsIdResult>> getCrsNameAndStdNumByInsIdAsync(int? InsId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getQuesAndStdAnsByExamAndStdIdResult>> getQuesAndStdAnsByExamAndStdIdAsync(int? ExamId, int? StdId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getQuestionsAndAnswersByExamNoResult>> getQuestionsAndAnswersByExamNoAsync(int? ExamNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getStdGradesByIdResult>> getStdGradesByIdAsync(int? stdID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getStudentInformationByDeptIdResult>> getStudentInformationByDeptIdAsync(int? DeptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertAnswersAsync(string questionID, string Content, bool? isCorrect, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertCoursesAsync(int? crsID, string crsName, string state, string desc, byte? hrs, int? total_grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertDepartmentAsync(int? deptID, string deptName, string description, int? mgrID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertDepartmentCourseAsync(int? crsID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertExamQuestionsAsync(int? examNo, int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertExamsAsync(int? examNo, string duration, DateTime? generationDate, string state, int? passingGrade, int? insID, int? crsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertInstructorAsync(string Fname, string Lname, string email, string profilePic, DateTime? hireDate, string phone, int? userID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertInstructorCourseAsync(int? crsid, int? insid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertQuestionBankAsync(int? QID, string type, string content, int? Points, int? CRSID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertStudentAsync(string firstname, string lastname, int? age, string email, string PP, DateTime? JDate, string PhNo, int? userID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<insertStudentAnswersResult>> insertStudentAnswersAsync(int? ExamQuesID, string stdChoice, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertStudentCourseAsync(int? CRSID, int? STDID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<insertStudentExamAnswersResult>> insertStudentExamAnswersAsync(int? ExamModelAnsID, int? stdID, int? ExamID, int? stdAnsID, int? grades, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insertUserAsync(string usrName, string usr_Password, int? typ, string st, DateTime? Llogin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectAnswersResult>> selectAnswersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectCoursesResult>> selectCoursesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectDepartmentsResult>> selectDepartmentsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectDepartmentsCourseResult>> selectDepartmentsCourseAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectExamResult>> selectExamAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectExamQuestionsResult>> selectExamQuestionsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectInstructorResult>> selectInstructorAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectInstructorCourseResult>> selectInstructorCourseAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectQuestionsBankResult>> selectQuestionsBankAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectStudentAnswersResult>> selectStudentAnswersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectStudentCourseResult>> selectStudentCourseAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectStudentExamAnswersResult>> selectStudentExamAnswersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectStudentsResult>> selectStudentsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<selectUsersResult>> selectUsersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateAnswersAsync(int? ans_id, string question_id, string Content, bool? isCorrect, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateCoursesAsync(int? crsID, string crsName, string state, string desc, byte? hrs, int? total_grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateDepartmentAsync(int? deptID, string deptName, string description, int? mgrID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateDepartmentCourseAsync(int? crsID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateExamQuestionsAsync(int? examNo, int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateExamsAsync(int? examNo, string duration, DateTime? generationDate, string state, int? passingGrade, int? insID, int? crsID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateInstructorAsync(string Fname, string Lname, string email, string profilePic, DateTime? hireDate, string phone, int? userID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateInstructorCourseAsync(int? crsid, int? insid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateQuestionBankAsync(int? QID, string type, string content, int? Points, int? CRSID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateStudentAsync(string firstname, string lastname, int? age, string email, string PP, DateTime? JDate, string PhNo, int? userID, int? deptID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateStudentAnswersResult>> UpdateStudentAnswersAsync(int? ExamQuesID, string stdChoice, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateStudentCourseAsync(int? CRSID, int? STDID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateStudentExamAnswersResult>> UpdateStudentExamAnswersAsync(int? ExamModelAnsID, int? stdID, int? ExamID, int? stdAnsID, int? grades, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateUserAsync(string usrName, string usr_Password, int? typ, string st, DateTime? Llogin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
